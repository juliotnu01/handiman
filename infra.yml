AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # Repositorio ECR
  MyECRRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: laravel-app

  # Key Pair (requiere creación manual previa)
  MyKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: KeypairGithub-2025
      PublicKeyMaterial: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILz9f+Qwsl4LArAINi8uyx99QSJ0vK5Vt1t5AMUho4Uu nunezjuliot@gmail.com

  # Instancia EC2
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c02fb55956c7d316 # Ubuntu 22.04
      InstanceType: t2.micro
      KeyName: !Ref MyKeyPair
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt update
          apt install -y docker.io docker-compose
          usermod -aG docker ubuntu
          newgrp docker
          systemctl enable --now docker

  # Base de datos RDS (MySQL)
  MyRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: laravel-db
      MasterUsername: admin
      MasterUserPassword: '{{resolve:ssm:/laravel/db/password}}' # Usar SSM Parameter Store
      DBName: laravel
      Engine: mysql
      DBInstanceClass: db.t2.micro
      AllocatedStorage: 20
      PubliclyAccessible: false # Desactivar acceso público
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId

  # Security Groups
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Acceso HTTP/SSH a EC2
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Acceso RDS desde EC2
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SecurityGroup

  # Rol para CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:*
                  - s3:*
                  - ec2:*
                  - ssm:GetParameter
                Resource: "*"
        - PolicyName: CloudFormationAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: "*"

Outputs:
  EC2PublicIP:
    Description: IP pública de EC2
    Value: !GetAtt MyEC2Instance.PublicIp
  RDSEndpoint:
    Description: Endpoint de RDS
    Value: !GetAtt MyRDSInstance.Endpoint.Address