name: AWS CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout del c√≥digo
      - uses: actions/checkout@v4

      # 2. Configurar credenciales de AWS
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Crear infraestructura con CloudFormation
      - name: Deploy CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file infra.yml \
            --stack-name laravel-stack \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset # Evita errores si no hay cambios
        # Agrega manejo de errores
        shell: bash
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # 4. Construir y subir imagen a ECR
      - name: Build and Push Docker Image
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker build -t $ECR_REGISTRY/laravel-app:latest -f Dockerfile .
          docker push $ECR_REGISTRY/laravel-app:latest
        env:
          ECR_REGISTRY: 545009837147.dkr.ecr.us-east-2.amazonaws.com

      # 5. Desplegar en EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d